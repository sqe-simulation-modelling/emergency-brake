<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ActionLanguage="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ">
  <uml:Model xmi:id="_ka7XMHfIEemcT9RMzhEU1Q" name="BrakeLogic">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ka7XMXfIEemcT9RMzhEU1Q" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ka7XMnfIEemcT9RMzhEU1Q" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_XaOB0IK8EemIAqiyY6o5Xg" source="UMLRT_Default_top">
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_XaP3AIK8EemIAqiyY6o5Xg" key="top_name" value="Top"/>
    </eAnnotations>
    <packagedElement xmi:type="uml:Package" xmi:id="_nkvn0HfIEemcT9RMzhEU1Q" name="Protocol1">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_nhzBgHfIEemcT9RMzhEU1Q" name="Protocol1">
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_nmFroHfIEemcT9RMzhEU1Q" client="_nhzBgHfIEemcT9RMzhEU1Q" supplier="_nmBaMHfIEemcT9RMzhEU1Q" contract="_nmBaMHfIEemcT9RMzhEU1Q"/>
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_nmOOgHfIEemcT9RMzhEU1Q" client="_nhzBgHfIEemcT9RMzhEU1Q" supplier="_nmKkIXfIEemcT9RMzhEU1Q" contract="_nmKkIXfIEemcT9RMzhEU1Q"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_nmBaMHfIEemcT9RMzhEU1Q" name="Protocol1">
        <ownedOperation xmi:type="uml:Operation" xmi:id="_35qn0HfIEemcT9RMzhEU1Q" name="sendSensorData">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_W6hdEIIXEemCSPm-xHh_NA" name="sensorDataA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_bIWk8IilEemgm9FVCX40jA" name="sensorDataB">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_dbUGEIilEemgm9FVCX40jA" name="sensorDataC">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_vPFy0JB-Eemdd41GHD9OYg" name="steering">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_nmG5wHfIEemcT9RMzhEU1Q" name="Protocol1~">
        <ownedOperation xmi:type="uml:Operation" xmi:id="_ANSD0HfJEemcT9RMzhEU1Q" name="fetchSensorData">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_r4VTwIIXEemCSPm-xHh_NA" name="currentSpeedData">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_nmJ9EHfIEemcT9RMzhEU1Q" client="_nhzBgHfIEemcT9RMzhEU1Q" supplier="_nmG5wHfIEemcT9RMzhEU1Q"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nmKkIHfIEemcT9RMzhEU1Q" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_nmKkIXfIEemcT9RMzhEU1Q" name="Protocol1IO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_nmO1kHfIEemcT9RMzhEU1Q" client="_nhzBgHfIEemcT9RMzhEU1Q" supplier="_nmKkIXfIEemcT9RMzhEU1Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_36-2cHfIEemcT9RMzhEU1Q" operation="_35qn0HfIEemcT9RMzhEU1Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_ANrFYHfJEemcT9RMzhEU1Q" operation="_ANSD0HfJEemcT9RMzhEU1Q"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eErxYHfJEemcT9RMzhEU1Q" name="Environment" classifierBehavior="_ez6ZcHfKEemcT9RMzhEU1Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_1DJ4QHfJEemcT9RMzhEU1Q" name="sendSensorDataPort" visibility="public" type="_nhzBgHfIEemcT9RMzhEU1Q" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_T1tmgHfKEemcT9RMzhEU1Q" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="pathmap://UMLRTRTSLIB/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_qIPbsIRzEemJZtKMJnThvA" name="SensorDataA" visibility="protected" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_uDE5kIRzEemJZtKMJnThvA" value="100"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_BSerwIioEemgm9FVCX40jA" name="SensorDataB" visibility="protected" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_BSerwYioEemgm9FVCX40jA" value="80"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_B2pv0IioEemgm9FVCX40jA" name="SensorDataC" visibility="protected" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
        <qualifier xmi:type="uml:Property" xmi:id="_GRraIJB-Eemdd41GHD9OYg" name="SensorDataC" visibility="protected" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_GRraIZB-Eemdd41GHD9OYg" value="50"/>
        </qualifier>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_B2pv0YioEemgm9FVCX40jA" value="50"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_6QU2AIkHEemPMuUpYENSyA" name="SensorToDecrease" visibility="public" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="__atQMIkHEemPMuUpYENSyA" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_HVUBYJB-Eemdd41GHD9OYg" name="Steering" visibility="protected" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
        <qualifier xmi:type="uml:Property" xmi:id="_HVUBYZB-Eemdd41GHD9OYg" name="Steering" visibility="protected" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_HVUBYpB-Eemdd41GHD9OYg" value="0"/>
        </qualifier>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_HVUBY5B-Eemdd41GHD9OYg" value="0"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_ez6ZcHfKEemcT9RMzhEU1Q" name="StateMachine" isReentrant="false">
        <region xmi:type="uml:Region" xmi:id="_e0r1gHfKEemcT9RMzhEU1Q" name="Region">
          <transition xmi:type="uml:Transition" xmi:id="_e1K9sHfKEemcT9RMzhEU1Q" name="Initial" source="_e0zKQHfKEemcT9RMzhEU1Q" target="_e1BzwHfKEemcT9RMzhEU1Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yMQuMHfKEemcT9RMzhEU1Q" name="Effect" isReentrant="false">
              <language>C++</language>
              <body>// Start the game by sending sensor data to the BrakeLogicUnit&#xD;
log.log(&quot;Starting simulation&quot;);
srand(time(NULL));&#xD;
if ( sendSensorDataPort.sendSensorData(SensorDataA, SensorDataB, SensorDataC, Steering).send() ) {&#xD;
    log.log( &quot;Sent sensor data!&quot;);&#xD;
} else {&#xD;
    log.log( &quot;Error sending sensor data!&quot;);&#xD;
}
SensorDataA = SensorDataA - 5;</body>
            </effect>
          </transition>
          <transition xmi:type="uml:Transition" xmi:id="_oDrUoHfKEemcT9RMzhEU1Q" name="" source="_e1BzwHfKEemcT9RMzhEU1Q" target="_e1BzwHfKEemcT9RMzhEU1Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_DrBEEHfLEemcT9RMzhEU1Q" name="Effect" isReentrant="false">
              <language>C++</language>
              <body>// Reply to a pong message by sending a ping.
log.log(&quot;Received current speed value of currentSpeed=%i!&quot;, currentSpeedData);
if ( sendSensorDataPort.sendSensorData(SensorDataA, SensorDataB, SensorDataC, Steering).send()) { // rand() % 100
	log.log( &quot;Sent sensor data!&quot;);
} else {
	log.log( &quot;Error sending sensor data!&quot;);
}

// Modify sensor data
SensorToDecrease = rand() % 4;
if (SensorToDecrease == 0) {
	SensorDataA = SensorDataA - 5;
}
else if (SensorToDecrease == 1) {
	SensorDataB = SensorDataB - 3;
}
else if (SensorToDecrease == 2) {
	Steering = (rand() % 180) - 90;
}
else {
	if (rand() % 2 == 0) {
		SensorDataC = SensorDataC - rand() % 12;
	}
	else {
		SensorDataC = SensorDataC + rand() % 12;
	}
}

</body>
            </effect>
            <trigger xmi:type="uml:Trigger" xmi:id="_38dyQHfKEemcT9RMzhEU1Q" event="_ANrFYHfJEemcT9RMzhEU1Q" port="_1DJ4QHfJEemcT9RMzhEU1Q"/>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_e0zKQHfKEemcT9RMzhEU1Q"/>
          <subvertex xmi:type="uml:State" xmi:id="_e1BzwHfKEemcT9RMzhEU1Q" name="CollectingSensorData"/>
        </region>
      </ownedBehavior>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H1dEMHfLEemcT9RMzhEU1Q" name="BrakeLogicUnit" classifierBehavior="_ovLTQHfLEemcT9RMzhEU1Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_KrPlkHfLEemcT9RMzhEU1Q" name="fetchSensorDataPort" visibility="public" type="_nhzBgHfIEemcT9RMzhEU1Q" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_UGOSQHfLEemcT9RMzhEU1Q" name="currentSpeed" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_wC8KYILEEemIAqiyY6o5Xg">
          <body>+ currentSpeed : AnsiCLibrary::unsigned int {unique} = 100</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_LTZesByeEduyofBvg4RL2w"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_3m8k0IK4EemIAqiyY6o5Xg" value="20"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ibAmgHfLEemcT9RMzhEU1Q" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="pathmap://UMLRTRTSLIB/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_GFgpYIkKEemPMuUpYENSyA" name="previousSurfaceLevel" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_QdqwAIkKEemPMuUpYENSyA" value="50"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_ovLTQHfLEemcT9RMzhEU1Q" name="StateMachine" isReentrant="false">
        <region xmi:type="uml:Region" xmi:id="_ovTPEHfLEemcT9RMzhEU1Q" name="Region">
          <transition xmi:type="uml:Transition" xmi:id="_ovbK4HfLEemcT9RMzhEU1Q" name="Initial" source="_ovVrUHfLEemcT9RMzhEU1Q" target="_ovYuoHfLEemcT9RMzhEU1Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_bBkvQHfVEemcT9RMzhEU1Q" name="Effect" isReentrant="false">
              <language>C++</language>
              <body>log.log(&quot;BrakeLogicUnit is ready&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:type="uml:Transition" xmi:id="_wjI-0HfLEemcT9RMzhEU1Q" name="" source="_ovYuoHfLEemcT9RMzhEU1Q" target="_ovYuoHfLEemcT9RMzhEU1Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_i_zxIHfVEemcT9RMzhEU1Q" name="Effect" isReentrant="false">
              <language>C++</language>
              <body>// Reply to a ping message by sending a pong.
log.log(&quot;Received data from sensor A with data=%i!&quot;, sensorDataA);
log.log(&quot;Received data from sensor B with data=%i!&quot;, sensorDataB);
log.log(&quot;Received data from sensor C with data=%i!&quot;, sensorDataC);
log.log(&quot;Received steering data with data=%i!&quot;, steering);

if (currentSpeed > 0){
    //log.log(&quot;Received data:&quot;);
    //log.log(testdata);
    if (sensorDataA / currentSpeed &lt; 3) { // if the rover is about to hit a wall within the next 3 seconds
	log.log(&quot;Brake because an obstacle is coming too close from front (sensor A)!&quot;);
	currentSpeed = 0;
    } else if (sensorDataB &lt; 2) { // if an obstacle is very close around the rover, e.g. during parking
	log.log(&quot;Brake because an obstacle is too close around the rover (sensor B)!&quot;);
    } else if (abs(previousSurfaceLevel - sensorDataC) > 10) {
	log.log(&quot;Brake because too quick surface level change (sensor C)!&quot;);
	currentSpeed = 0;
    } else {
	log.log(&quot;Drive&quot;);
    }
    if (currentSpeed > 0) {
	if ( fetchSensorDataPort.fetchSensorData(currentSpeed).send() ){
		log.log( &quot;Fetching more sensor data...&quot;);
    	} else {
		log.log( &quot;Error fetching sensor data!&quot;);
    	}
    } else {
    	log.log( &quot;Performed an emergency brake! Ending the simulation...&quot;);
    }
} else { 
	log.log( &quot;Performed an emergency brake! Ending the simulation...&quot;);
}
// Requires to include in BrakeLogicUnit.cc
//#include &lt;thread>
//#include &lt;iostream>
//#include &lt;chrono>
std::this_thread::sleep_for(std::chrono::milliseconds(250));

//    OLD:
//    if(sensorDataA&lt;20) {
//	log.log(&quot;Brake&quot;);
//	currentSpeed = 0;
//    } else if (sensorDataB &lt; 15) {
//    log.log(&quot;Brake&quot;);
//    currentSpeed = 0;
//    } else if (abs(previousSurfaceLevel - sensorDataC) > 10) {
//    log.log(&quot;Brake&quot;);
//    currentSpeed = 0;
//    } else {
//    log.log(&quot;Drive&quot;);
//    previousSurfaceLevel = sensorDataC;
//    }
    //sleep(5);
    //currentSpeed--;
</body>
            </effect>
            <trigger xmi:type="uml:Trigger" xmi:id="_Ezd44HfWEemcT9RMzhEU1Q" event="_36-2cHfIEemcT9RMzhEU1Q" port="_KrPlkHfLEemcT9RMzhEU1Q"/>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ovVrUHfLEemcT9RMzhEU1Q"/>
          <subvertex xmi:type="uml:State" xmi:id="_ovYuoHfLEemcT9RMzhEU1Q" name="ProcessingSensorData"/>
        </region>
      </ownedBehavior>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TecfkHfWEemcT9RMzhEU1Q" name="Top" isActive="true">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_etQhYHfWEemcT9RMzhEU1Q" name="BrakeLogicUnit" visibility="protected" type="_H1dEMHfLEemcT9RMzhEU1Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_h9zsIHfWEemcT9RMzhEU1Q" name="Environment" visibility="protected" type="_eErxYHfJEemcT9RMzhEU1Q" isOrdered="true" aggregation="composite"/>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_xZRUkHfWEemcT9RMzhEU1Q" name="RTConnector1">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_xZZQYHfWEemcT9RMzhEU1Q" partWithPort="_h9zsIHfWEemcT9RMzhEU1Q" role="_1DJ4QHfJEemcT9RMzhEU1Q"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_xZaegHfWEemcT9RMzhEU1Q" partWithPort="_etQhYHfWEemcT9RMzhEU1Q" role="_KrPlkHfLEemcT9RMzhEU1Q"/>
      </ownedConnector>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ka7XM3fIEemcT9RMzhEU1Q">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ka7XNHfIEemcT9RMzhEU1Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_RT_PROFILE/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ka7XNXfIEemcT9RMzhEU1Q">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ka7XNnfIEemcT9RMzhEU1Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ka7XN3fIEemcT9RMzhEU1Q">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ka7XOHfIEemcT9RMzhEU1Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UMLRT_CPP/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_8s7-wH1IEemvBY4fWNKGjQ">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_8s-bAH1IEemvBY4fWNKGjQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:ProtocolContainer xmi:id="_nlAtkHfIEemcT9RMzhEU1Q" base_Package="_nkvn0HfIEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_nmEdgHfIEemcT9RMzhEU1Q" base_Interface="_nmBaMHfIEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_nmIu8HfIEemcT9RMzhEU1Q" base_Interface="_nmG5wHfIEemcT9RMzhEU1Q" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nmNAYHfIEemcT9RMzhEU1Q" base_Interface="_nmKkIXfIEemcT9RMzhEU1Q" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nmPcoHfIEemcT9RMzhEU1Q" base_Collaboration="_nhzBgHfIEemcT9RMzhEU1Q"/>
  <UMLRealTime:Capsule xmi:id="_eFHPMHfJEemcT9RMzhEU1Q" base_Class="_eErxYHfJEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTPort xmi:id="_1DVecHfJEemcT9RMzhEU1Q" base_Port="_1DJ4QHfJEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTPort xmi:id="_T1x38HfKEemcT9RMzhEU1Q" isWired="false" base_Port="_T1tmgHfKEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e020oHfKEemcT9RMzhEU1Q" base_Pseudostate="_e0zKQHfKEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTState xmi:id="_e1EQAHfKEemcT9RMzhEU1Q" base_State="_e1BzwHfKEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTRegion xmi:id="_e1NZ8HfKEemcT9RMzhEU1Q" base_Region="_e0r1gHfKEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_e1VVwHfKEemcT9RMzhEU1Q" base_StateMachine="_ez6ZcHfKEemcT9RMzhEU1Q"/>
  <UMLRealTime:Capsule xmi:id="_H1m1MHfLEemcT9RMzhEU1Q" base_Class="_H1dEMHfLEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTPort xmi:id="_KrSo4HfLEemcT9RMzhEU1Q" base_Port="_KrPlkHfLEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTPort xmi:id="_ibDp0HfLEemcT9RMzhEU1Q" isWired="false" base_Port="_ibAmgHfLEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ovXggHfLEemcT9RMzhEU1Q" base_Pseudostate="_ovVrUHfLEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTState xmi:id="_ovZ8wHfLEemcT9RMzhEU1Q" base_State="_ovYuoHfLEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ovbx8HfLEemcT9RMzhEU1Q" base_Region="_ovTPEHfLEemcT9RMzhEU1Q"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_ove1QHfLEemcT9RMzhEU1Q" base_StateMachine="_ovLTQHfLEemcT9RMzhEU1Q"/>
  <UMLRealTime:Capsule xmi:id="_Teh_JnfWEemcT9RMzhEU1Q" base_Class="_TecfkHfWEemcT9RMzhEU1Q"/>
  <UMLRealTime:CapsulePart xmi:id="_etTksHfWEemcT9RMzhEU1Q" base_Property="_etQhYHfWEemcT9RMzhEU1Q"/>
  <UMLRealTime:CapsulePart xmi:id="_h92IYHfWEemcT9RMzhEU1Q" base_Property="_h9zsIHfWEemcT9RMzhEU1Q"/>
  <UMLRealTime:RTConnector xmi:id="_xZbFkHfWEemcT9RMzhEU1Q" base_Connector="_xZRUkHfWEemcT9RMzhEU1Q"/>
  <ActionLanguage:TextualRepresentation xmi:id="_wDAb0ILEEemIAqiyY6o5Xg" base_Comment="_wC8KYILEEemIAqiyY6o5Xg" language="org.eclipse.papyrus.uml.textedit.property.xtext.UmlProperty"/>
</xmi:XMI>
